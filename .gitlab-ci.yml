stages:
  - build
  - push
  - update-manifest

variables:
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

build-image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  only:
    - main
  script:
    - echo "🔧 Docker 이미지 빌드 중..."
    - docker build -t $AWS_ECR_REPO:$IMAGE_TAG .

push-image:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  only:
    - main
  script:
    - echo "🔐 AWS ECR 로그인 중..."
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPO
    - echo "📤 ECR에 이미지 푸시 중..."
    - docker push $AWS_ECR_REPO:$IMAGE_TAG

update-manifest:
  stage: update-manifest
  image: alpine/git
  only:
    - main
  before_script:
    - apk add --no-cache git openssh
  script:
    - echo "📝 manifest 레포 클론 및 이미지 태그 수정 중..."
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H localhost >> ~/.ssh/known_hosts
    - git clone git@localhost:root/manifest.git
    - cd manifest/order-service
    - sed -i "s|image:.*|image: ${AWS_ECR_REPO}:${IMAGE_TAG}|" deployment.yaml
    - git config --global user.email "ci@example.com"
    - git config --global user.name "CI Bot"
    - git add deployment.yaml
    - git commit -m "chore: update image to ${IMAGE_TAG}"
    - git push origin main
